# Real MCP Servers Configuration
# This file defines actual MCP servers that can be connected to
# Enable/disable servers by setting 'enabled: true/false'

servers:
  # Official TypeScript-based servers (use npx)
  memory:
    enabled: true
    description: "Knowledge graph-based persistent memory system"
    command: "npx"
    args: ["-y", "@modelcontextprotocol/server-memory"]
    env: {}
    capabilities: ["tools", "resources"]
    tools: ["remember", "search", "forget"]
    
  time:
    enabled: true
    description: "Time and timezone conversion capabilities"
    command: "npx"
    args: ["-y", "@modelcontextprotocol/server-time"]
    env: {}
    capabilities: ["tools"]
    tools: ["get_current_time", "convert_timezone"]
    
  fetch:
    enabled: true
    description: "Web content fetching and conversion for efficient LLM usage"
    command: "npx"
    args: ["-y", "@modelcontextprotocol/server-fetch"]
    env: {}
    capabilities: ["tools"]
    tools: ["fetch"]
    
  filesystem:
    enabled: false  # Enable when you want file access
    description: "Secure file operations with configurable access controls"
    command: "npx"
    args: ["-y", "@modelcontextprotocol/server-filesystem", "/tmp"]  # Change path as needed
    env: {}
    capabilities: ["tools", "resources"]
    tools: ["read_file", "write_file", "list_directory", "create_directory"]
    
  sqlite:
    enabled: false  # Enable when you have a SQLite database
    description: "Database interaction and business intelligence capabilities"
    command: "npx"
    args: ["-y", "@modelcontextprotocol/server-sqlite", "/path/to/database.db"]
    env: {}
    capabilities: ["tools", "resources"]
    tools: ["query", "list_tables", "describe_table"]
    
  # Official Python-based servers (use uvx)
  git:
    enabled: false  # Enable when you have a git repository
    description: "Tools to read, search, and manipulate Git repositories"
    command: "uvx"
    args: ["mcp-server-git", "--repository", "/path/to/git/repo"]
    env: {}
    capabilities: ["tools", "resources"]
    tools: ["git_log", "git_diff", "git_status", "search_files"]
    
  # Servers requiring API keys
  github:
    enabled: false  # Enable when you have a GitHub token
    description: "Repository management, file operations, and GitHub API integration"
    command: "npx"
    args: ["-y", "@modelcontextprotocol/server-github"]
    env:
      GITHUB_PERSONAL_ACCESS_TOKEN: "your_token_here"
    capabilities: ["tools", "resources"]
    tools: ["create_repository", "search_repositories", "get_file", "create_issue"]
    
  brave_search:
    enabled: false  # Enable when you have a Brave Search API key
    description: "Web and local search using Brave's Search API"
    command: "npx"
    args: ["-y", "@modelcontextprotocol/server-brave-search"]
    env:
      BRAVE_API_KEY: "your_api_key_here"
    capabilities: ["tools"]
    tools: ["brave_search"]
    
  postgres:
    enabled: false  # Enable when you have a PostgreSQL database
    description: "Read-only database access with schema inspection"
    command: "npx"
    args: ["-y", "@modelcontextprotocol/server-postgres", "postgresql://user:pass@localhost/db"]
    env: {}
    capabilities: ["tools", "resources"]
    tools: ["query", "list_tables", "describe_table"]
    
  # Advanced servers
  playwright:
    enabled: true  # Microsoft's official Playwright MCP server
    description: "Advanced browser automation with 35+ tools including screenshots, navigation, form filling, and vision mode"
    command: "npx"
    args: ["-y", "@playwright/mcp"]
    env: {}
    capabilities: ["tools", "resources"]
    tools: ["browser_navigate", "browser_click", "browser_type", "browser_take_screenshot", "browser_snapshot", "browser_fill", "browser_select", "browser_scroll", "browser_wait_for", "browser_file_upload", "browser_handle_dialog", "browser_pdf_save", "browser_network_requests", "browser_console_messages", "browser_tab_new", "browser_tab_select", "browser_generate_playwright_test"]
    
  puppeteer:
    enabled: false  # Enable for browser automation (requires more setup)
    description: "Browser automation and web scraping"
    command: "npx"
    args: ["-y", "@modelcontextprotocol/server-puppeteer"]
    env: {}
    capabilities: ["tools"]
    tools: ["screenshot", "scrape", "navigate"]
    
  # Community servers (examples)
  aws:
    enabled: false
    description: "Perform operations on your AWS resources using an LLM"
    command: "npx"
    args: ["-y", "mcp-server-aws"]
    env:
      AWS_ACCESS_KEY_ID: "your_key_here"
      AWS_SECRET_ACCESS_KEY: "your_secret_here"
      AWS_REGION: "us-east-1"
    capabilities: ["tools"]
    tools: ["list_ec2_instances", "describe_s3_buckets"]
    
  docker:
    enabled: false
    description: "Integrate with Docker to manage containers, images, volumes, and networks"
    command: "npx"
    args: ["-y", "mcp-server-docker"]
    env: {}
    capabilities: ["tools"]
    tools: ["list_containers", "docker_run", "docker_build"]
    
  # Mistral OCR Annotation Server
  mistral_ocr:
    enabled: true
    description: "Mistral OCR annotation for PDF processing with structured data extraction"
    command: "python"
    args: ["mcp/servers/mistral_ocr_server.py"]
    env:
      MISTRAL_API_KEY: "your_mistral_api_key_here"  # Set your actual API key
    capabilities: ["tools"]
    tools: ["process_pdf_document_annotation", "process_pdf_bbox_annotation", "process_pdf_full_annotation", "analyze_research_paper"]

# Default settings
defaults:
  connection_timeout: 30  # seconds
  retry_attempts: 3
  retry_delay: 2  # seconds
  
# Server groups for easy management
groups:
  basic:
    description: "Basic servers that work without additional setup"
    servers: ["memory", "time", "fetch"]
    
  development:
    description: "Development-focused servers"
    servers: ["filesystem", "git", "github"]
    
  data:
    description: "Data access servers"
    servers: ["sqlite", "postgres"]
    
  web:
    description: "Web interaction servers"
    servers: ["fetch", "brave_search", "playwright", "puppeteer"]
    
  cloud:
    description: "Cloud platform servers"
    servers: ["aws", "github"]
    
  local:
    description: "Local system servers"
    servers: ["filesystem", "git", "docker", "sqlite"] 